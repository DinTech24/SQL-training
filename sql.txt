create table department(dep_id int NOT NULL PRIMARY KEY,dep_name varchar(20),dep_location varchar(15));
create table salary_grade(grade int NOT NULL PRIMARY KEY,min_salary int, max_salary int);
create table employees(emp_id int NOT NULL PRIMARY KEY,emp_name varchar(15),job_name varchar(10),manager_id int,hire_date date,salary decimal(10,2),commission decimal(7,2),dep_id int foreign key references department(dep_id));



//INSERTING VALUES IN EMPLOYEES

insert into employees values(68319,'KAYLING','PRESIDENT',NULL,'1991-11-18',6000,NULL,1001);
insert into employees values(66928,'BLAZE','MANAGER',68319,'1991-05-01',2750,NULL,3001);
insert into employees values(67832,'CLARE','MANAGER',68319,'1991-06-09',2550,NULL,1001);
insert into employees values(65646,'JONAS','MANAGER',68319,'1991-04-02',2957,NULL,2001);
insert into employees values(67858,'SCARLET','ANALYST',65646,'1997-04-19',3100,NULL,2001);
insert into employees values(69062,'FRANK','ANALYST',65646,'1991-12-03',3100,NULL,2001);
insert into employees values(63679,'SANDRINE','CLERK',69062,'1990-12-18',900,NULL,2001);
insert into employees values(64989,'ADELYN','SALESMAN',66928,'1991-02-20',1700,400,3001);
insert into employees values(65271,'WADE','SALESMAN',66928,'1991-02-22',1350,600,3001);
insert into employees values(66564,'MADDEN','SALESMAN',66928,'1991-09-28',1350,1500,3001);
insert into employees values(68454,'TUCKER','SALESMAN',66928,'1991-09-08',1600,0,3001);
insert into employees values(68736,'ADNRES','SALESMAN',67858,'1997-05-23',1200,NULL,2001);
insert into employees values(69000,'JULIUS','CLERK',66928,'1991-12-03',1050,NULL,3001);
insert into employees values(69000,'MARKER','CLERK',66928,'1992-01-23',1400,NULL,1001);


Question 1. From the above table return complete information about the employees.


select * from  employees;

emp_id	emp_name	job_name	manager_id	hire_date	salary	     commission	       dep_id
63679	SANDRINE 	CLERK		69062		1990-12-18	900.00		NULL		2001
64989	ADELYN		SALESMAN	66928		1991-02-20	1700.00		400.00		3001
65271	WADE		SALESMAN	66928		1991-02-22	1350.00		600.00		3001
65646	JONAS		MANAGER		68319		1991-04-02	2957.00		NULL		2001
66564	MADDEN		SALESMAN	66928		1991-09-28	1350.00		1500.00		3001
66928	BLAZE		MANAGER		68319		1991-05-01	2750.00		NULL		3001
67832	CLARE		MANAGER		68319		1991-06-09	2550.00		NULL		1001
67858	SCARLET		ANALYST		65646		1997-04-19	3100.00		NULL		2001
68319	KAYLING		PRESIDENT	NULL		1991-11-18	6000.00		NULL		1001
68454	TUCKER		SALESMAN	66928		1991-09-08	1600.00		0.00		3001
68736	ADNRES		SALESMAN	67858		1997-05-23	1200.00		NULL		2001
69000	JULIUS		CLERK		66928		1991-12-03	1050.00		NULL		3001
69062	FRANK		ANALYST		65646		1991-12-03	3100.00		NULL		2001
69324	MARKER		CLERK		66928		1992-01-23	1400.00		NULL		1001



Question 2. From the table, write a SQL query to find the salaries of all employees. Return salary

select salary from  employees;


salary
900.00
1700.00
1350.00
2957.00
1350.00
2750.00
2550.00
3100.00
6000.00
1600.00
1200.00
1050.00
3100.00
1400.00


3. From the table, write a SQL query to find the unique designations of the employees.Return job name.

SELECT DISTINCT job_name FROM employees;

job_name
ANALYST
CLERK
MANAGER
PRESIDENT
SALESMAN


Question 4. From the following table, write a SQL query to list the employees’ names, increase their
salary by 15%, and express the number of Dollars.

select emp_name,(salary + salary * 0.15) as salary  from employees;

emp_name	salary  
SANDRINE	1035.0000
ADELYN		1955.0000
WADE		1552.5000
JONAS		3400.5500
MADDEN		1552.5000
BLAZE		3162.5000
CLARE		2932.5000
SCARLET		3565.0000
KAYLING		6900.0000
TUCKER		1840.0000
ADNRES		1380.0000
JULIUS		1207.5000
FRANK		3565.0000
MARKER		1610.0000


Question 5. From the following table, write a SQL query to list the employee's name and job name as
a format of "Employee & Job".

select (emp_name +'  '+ job_name) as 'emlpoyees & Job'  from employees;

emlpoyees & Job
SANDRINE   CLERK
ADELYN   SALESMAN
WADE   SALESMAN
JONAS   MANAGER
MADDEN   SALESMAN
BLAZE   MANAGER
CLARE   MANAGER
SCARLET   ANALYST
KAYLING   PRESIDENT
TUCKER   SALESMAN
ADNRES   SALESMAN
JULIUS   CLERK
FRANK   ANALYST
MARKER   CLERK


Question 6. From the following table, write a SQL query to find those employees with a hire date in
the format like February 22, 1991. Return employee ID, employee name, salary, hire date.

select emp_id,emp_name,salary, convert(varchar,hire_date, 107) as 'hire_date' from employees ;

emp_id	emp_name	salary		hire_date
63679	SANDRINE	900.00		Dec 18, 1990
64989	ADELYN		1700.00		Feb 20, 1991
65271	WADE		1350.00		Feb 22, 1991
65646	JONAS		2957.00		Apr 02, 1991
66564	MADDEN		1350.00		Sep 28, 1991
66928	BLAZE		2750.00		May 01, 1991
67832	CLARE		2550.00		Jun 09, 1991
67858	SCARLET		3100.00		Apr 19, 1997
68319	KAYLING		6000.00		Nov 18, 1991
68454	TUCKER		1600.00		Sep 08, 1991
68736	ADNRES		1200.00		May 23, 1997
69000	JULIUS		1050.00		Dec 03, 1991
69062	FRANK		3100.00		Dec 03, 1991
69324	MARKER		1400.00		Jan 23, 1992


Question 7. From the following table, write a SQL query to count the number of characters except
the spaces for each employee name. Return employee name length.

select len(trim(emp_name)) as 'length'  from employees ;

length
8
6
4
5
6
5
5
7
7
6
6
6
5
6


Question 8. From the following table, write a SQL query to find the employee ID, salary, and
commission of all the employees.


select emp_name,salary,commission  from employees ;


emp_name 	salary		commission
SANDRINE	900.00		NULL
ADELYN		1700.00		400.00
WADE		1350.00		600.00
JONAS		2957.00		NULL
MADDEN		1350.00		1500.00
BLAZE		2750.00		NULL
CLARE		2550.00		NULL
SCARLET		3100.00		NULL
KAYLING		6000.00		NULL
TUCKER		1600.00		0.00
ADNRES		1200.00		NULL
JULIUS		1050.00		NULL
FRANK		3100.00		NULL
MARKER		1400.00		NULL


Question9. From the following table, write a SQL query to find those employees who do not belong
to the department 2001. Return complete information about the employees. (Using NOT IN)


select *  from employees where 2001 not in(dep_id);

emp_id	emp_name	job_name	manager_id	hire_date	salary		commission	dep_id
64989	ADELYN		SALESMAN	66928		1991-02-20	1700.00		400.00		3001
65271	WADE		SALESMAN	66928		1991-02-22	1350.00		600.00		3001
66564	MADDEN		SALESMAN	66928		1991-09-28	1350.00		1500.00		3001
66928	BLAZE		MANAGER		68319		1991-05-01	2750.00		NULL		3001
67832	CLARE		MANAGER		68319		1991-06-09	2550.00		NULL		1001
68319	KAYLING		PRESIDENT	NULL		1991-11-18	6000.00		NULL		1001
68454	TUCKER		SALESMAN	66928		1991-09-08	1600.00		0.00		3001
69000	JULIUS		CLERK		66928		1991-12-03	1050.00		NULL		3001
69324	MARKER		CLERK		66928		1992-01-23	1400.00		NULL		1001



Question 10. From the following table, write a SQL query to find those employees who joined before
1991. Return complete information about the employees.

select *  from employees where year(hire_date)<1991 ;

emp_id	emp_name	job_name	manager_id	hire_date	salary	commission	dep_id
63679	SANDRINE	CLERK		69062		1990-12-18	900.00	NULL		2001


Question 11. From the following table, write a SQL query to compute the average salary of those
employees who work as ‘ANALYST’. Return average salary.

select avg(salary) as 'average_salary' from employees where job_name='ANALYST' ;

average_salary
3100.000000

Question 12. From the following table, write a SQL query to find the details of the employee ‘BLAZE’

select *  from employees where emp_name = 'BLAZE' ;

emp_id	emp_name	job_name	manager_id	hire_date	salary	commission	dep_id
66928	BLAZE		MANAGER		68319		1991-05-01	2750.00	NULL		3001

Question 13. From the following table, write a SQL query to find those employees whose salary
exceeds 3000 after giving a 25% increment. Return complete information about the
employees.

select *  from employees where (salary * 1.25) > 3000 ;

emp_id	emp_name	job_name	manager_id	hire_date	salary	commission	dep_id
65646	JONAS		MANAGER		68319		1991-04-02	2957.00	NULL		2001
66928	BLAZE		MANAGER		68319		1991-05-01	2750.00	NULL		3001
67832	CLARE		MANAGER		68319		1991-06-09	2550.00	NULL		1001
67858	SCARLET		ANALYST		65646		1997-04-19	3100.00	NULL		2001
68319	KAYLING		PRESIDENT	NULL		1991-11-18	6000.00	NULL		1001
69062	FRANK		ANALYST		65646		1991-12-03	3100.00	NULL		2001


Question 14. From the following table, write a SQL query to find those employees who joined in the
month January. Return complete information about the employees.

select *  from employees where month(hire_date) = 01 ;


emp_id	emp_name	job_name	manager_id	hire_date	salary		commission	dep_id
69324	MARKER		CLERK		66928		1992-01-23	1400.00		NULL		1001


Question 15. From the following table, write a SQL query to find those employees who joined before
1st April 1991. Return employee ID, employee name, hire date and salary

select *  from employees where hire_date < '1991-04-01' ;

emp_id	emp_name	job_name	manager_id	hire_date	salary	commission	dep_id
63679	SANDRINE	CLERK		69062		1990-12-18	900.00	NULL		2001
64989	ADELYN		SALESMAN	66928		1991-02-20	1700.00	400.00		3001
65271	WADE	S	ALESMAN		66928		1991-02-22	1350.00	600.00		3001


Question 16. From the following table, write a SQL query to find the name and salary of the employee
FRANK.


select emp_name,salary  from employees where emp_name ='FRANK';


emp_name	salary
FRANK		3100.00

Question 17. From the following table, write a SQL query to list all the employees except PRESIDENT
and MANAGER in ascending order of salaries. Return complete information about the
employees. (Using Order By)


select * from employees where job_name!='PRESIDENT' AND job_name!= 'MANAGER'  ORDER BY(salary) ;

emp_id	emp_name	job_name	manager_id	hire_date	salary		commission	dep_id
63679	SANDRINE	CLERK		69062		1990-12-18	900.00		NULL		2001
69000	JULIUS		CLERK		66928		1991-12-03	1050.00		NULL		3001
68736	ADNRES		SALESMAN	67858		1997-05-23	1200.00		NULL		2001
65271	WADE		SALESMAN	66928		1991-02-22	1350.00		600.00		3001
66564	MADDEN		SALESMAN	66928		1991-09-28	1350.00		1500.00		3001
69324	MARKER		CLERK		66928		1992-01-23	1400.00		NULL		1001
68454	TUCKER		SALESMAN	66928		1991-09-08	1600.00		0.00		3001
64989	ADELYN		SALESMAN	66928		1991-02-20	1700.00		400.00		3001
67858	SCARLET		ANALYST		65646		1997-04-19	3100.00		NULL		2001
69062	FRANK		ANALYST		65646		1991-12-03	3100.00		NULL		2001


Question 18. From the following table, write a SQL query to find the highest salary. Return the
highest salary.


select MAX(salary) as 'Max' from employees;

Max
6000.00

Question 19. From the table, write a SQL query to find the average salary and average total
remuneration (salary and commission) for each type of job. Return name, average salary
and average total remuneration. (Using GROUP BY)


Question 20. From the following table, write a SQL query to find those employees who work in the
department ID 1001 or 2001. Return employee ID, employee name, department ID,
department location, and department name.(Using IN clause)


Question 21. From the table, write a SQL query to list the managers and number of employees work
under them. Sort the result set in ascending order on manager. Return manager ID and
number of employees under them.(Using GROUP BY & ORDER BY)


Question 22. From the table, write a SQL query to find those departments where at least two
employees work. Return department id, number of employees.(GROUP BY & HAVING)


Question 23. From the table, write a SQL query to find those employees whose names contain the
character set 'AR' together. Return complete information about the employees. (using ‘like’)


Question 24. Add a column for “Gender” in the employee table and update each row accordingly.

Question 25. From the above table we need to retrieve all employees except ‘Manager’ & ’President’
Job name.


Question 26. From the above table we need to display ‘Management Level’ - labelname for
‘President’,’Manager’,’Analyst’ jobs and ‘Employee Level’ - label name for ‘Salesman’,’Clerk’ job
names.


Question 27. Update commission field to 650.00 for job name titled as “analyst” in “employee” table
using “Exist” clauses.
● Stored Procedure
● Trigger
● Function in SQL
● TEMP using instead of IN
● INDEXING

